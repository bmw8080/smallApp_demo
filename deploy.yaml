# 定义镜像对外服务类型
apiVersion: v1
kind: Service
metadata:
  # 服务发现名称
  name: xyinvoice
  # 设置默认发布名字空间，必须先在kubernetes集群中先创建。
  # kubectl create ns demo
  namespace: demo
  labels:
    # 定义一致的标签方便管理
    app: xyinvoice
spec:
  # 定义选择器，此服务选择标签为“app=xyinvoice”的POD
  selector:
    app: xyinvoice
  # 准备通过网关发布，因此使用集群负载IP
  type: ClusterIP
  # 定义负载的目标端口
  ports:
  - port: 80
    # 名称定义与POD端口一致
    name: xyinvoice6060

---

# 定义部署资源（版本必须固定为下面内容，Kubernetes1.12.2）
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: xyinvoice
  # 设置默认发布名字空间，与服务发现定义一致
  namespace: demo
  labels:
    # 定义一致的标签方便管理
    app: xyinvoice
spec:
  # 副本数量，生产环境请设置3个以上。
  replicas: 1
  selector:
    # 定义匹配的POD资源标签，请保持与template中的定义一致
    matchLabels:
      app: xyinvoice
  strategy:
    # 设置为滚动更新模式
    type: RollingUpdate
    rollingUpdate:
      # 滚动更新时最大放大数，可以用百分比
      # 开始更新时自动增加老资源的副本数量实现滚动更新时不间段服务。
      maxSurge: 1
      # 滚动更新时最大不可用数量，可以是百分比
      # 滚动更新把老的资源缩放到指定的副本数量（n-maxUnavailable）
      # 然后再启动更新资源，然后停掉所有的老POD
      # 最后把新资源缩放到副本设定的数量
      maxUnavailable: 1
  template:
    metadata:
      labels:
        # 定义归档标签
        app: xyinvoice
    spec:
      containers:
      - name: xyinvoice
        # Docker镜像地址
        # 这里使用Jenkins的内置变量用作滚动更新的版本
        # 参见：https://snz1.cn/jenkins/env-vars.html
        # 注意及时清理docker库中不需要的。
        image: repo.docker:2008/xyinvoice/xyinvoice:${GIT_COMMIT}
        imagePullPolicy: IfNotPresent
        # 定义对外服务的端口（参见SptringBoot中的application.properties配置文件）
        ports:
        - containerPort: 6060
          name: xyinvoice6060
        resources:
          # 限制资源
          limits:
            # 1000m表示1CPU，也可以用数字表示
            cpu: "1000m"
            # 内存大小，单位可以是Mi、Gi
            memory: 1Gi
          # 请求资源，java相对要求多一些。
          requests:
            cpu: "600m"
            memory: 0.5Gi